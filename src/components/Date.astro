---
interface Props {
  posted: Date;
}
const { posted } = Astro.props;
---
<astro-date data-posted={posted}>
    <time datetime={posted.toISOString()} class="cursor-pointer">{posted}</time>
</astro-date>

<script>
class AstroDate extends HTMLElement {
    /**
     * AstroDate provides options for formatted dates
     * @constructor
     */
    constructor() {
        super();

        const posted = new Date(this.dataset.posted!);
        let isoFormat = true;
        const time = this.querySelector('time')!;
        time.title = "a date, in ISO 8601 format";
        time.innerText = this.dateIntoISO(posted);
        time.addEventListener('click', () => {
            isoFormat = !isoFormat;
            if (isoFormat) {
                time.title = "a date, in ISO 8601 format";
                time.innerText = this.dateIntoISO(posted);
            } else {
                time.title = "a date, formatted to five day weeks";
                time.innerText = this.dateIntoFives(posted);
            }
        });
    }

    /**
     * daysIntoYear returns the number of days since the start of the year
     * @see https://stackoverflow.com/a/40975730
     */
    daysIntoYear(posted: Date): number {
        const utc = Date.UTC(posted.getUTCFullYear(), posted.getUTCMonth(), posted.getUTCDate());
        const start = Date.UTC(posted.getUTCFullYear(), 0, 0);
        return (utc - start) / 24 / 60 / 60 / 1000;
    }

    /**
     * dateIntoISO converts a Date object into the UTC ISO string
     */
    dateIntoISO(posted: Date): string {
        const year = posted.getUTCFullYear();
        const month = String(posted.getUTCMonth() + 1).padStart(2, "0");
        const day = String(posted.getUTCDate()).padStart(2, "0");
        return year + "-" + month + "-" + day;
    }

    /**
     * dateIntoFives represents a Date object in five day weeks
     */
    dateIntoFives(posted: Date): string {
        const year = posted.getUTCFullYear();
        const days = this.daysIntoYear(posted);
        const month = Math.ceil(days / 30).toString().padStart(2, "0");
        const day = (((days - 1) % 30) + 1).toString().padStart(2, "0");
        return year + "-" + month + "-" + day;
    }
  }

  customElements.define('astro-date', AstroDate);
</script>
